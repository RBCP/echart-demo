<template>
    <div style="margin-top:50px">
      <el-form :model="value" ref="controlUserForm" size="small">
        <div class="table-container">
          <div class="button" style="width:4%;float:right;">
            <p><el-button class="el-icon-plus" @click.prevent="dialogFormVisible=true"></el-button></p>
            <p><el-button class="el-icon-minus" @click.prevent="delData()"></el-button></p>
          </div>
          <el-dialog title="新增加用户":visible.sync="dialogFormVisible">
            <el-form :model="AddUser" rules="rules">
              <el-form-item label="Stafd ID" >
                <el-input v-model="AddUser.id" autocomplete="off"></el-input>
              </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
              <el-button @click="dialogFormVisible=false">取消</el-button>
              <el-button type="primary" @click="add()">确定</el-button>
            </div>
          </el-dialog>
          <el-table
            border
            :data="List"
            >
            <el-table-column name="Staff ID">
              <template slot-scope="scope">
                {{scope.row.StaffID}}
              </template>
            </el-table-column>
          </el-table>
        </div>
        <el-form-item style="text-align:center">
          <el-button size="medium" @click="handlePrev">上一步，填写权限属性</el-button>
          <el-button type="primary" size="medium" @click="handleFinishCommit">完成</el-button>
        </el-form-item>
        </el-form>
    </div>
</template>

<script>

    export default {
        name: "controlUser",
      props: {
        value: Object,
        isEdit: {
          type: Boolean,
          default: false
        }
      },
        data(){
          return{
            dialogFormVisible:false,
            AddUser:{
              id:''
            },
            rules:{
              id:[
                {required:true,message:'请输入正确工号',trigger:'blur'},
                {type: 'string', min: 7, message: '工号不能小于7位'},
              ]
            }
          }
        },
      computed:{
          List:{
            get:function(){
              if(this.value.StaffID==null||this.value.StaffID.length<=0){
                this.List=null;
                return this.List
              }
              for(let i=0;i<this.value.StaffID.length;i++){
                this.List.push(this.value.StaffID[i])
              }
              return this.List;
            }
          }
      },
      methods:{
          add(){
            this.value.StaffID.push(this.AddUser.id);
            this.dialogFormVisible=false;
          },
        handlePrev(){
          this.$emit('prevStep')
        },
        handleFinishCommit(){
          this.$emit('finishCommit',this.isEdit);
        }
      }
    }
</script>

<style scoped>

</style>
